{
  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "Redux Store Skeleton": {
		"prefix": "store",
		"body": [
      "import {ActionsUnion, createAction} from '@martin_hotell/rex-tils';",
      "import {IApplicationState} from '..';",
      "",
      "/**",
      " * State",
      " */",
      "export interface I${1:StoreName}State {",
      "\treadonly template?: string;",
      "}",
      "",
      "const initialState: I${1:StoreName}State = {",
      "\ttemplate: undefined,",
      "};",
      "",
      "/**",
      " * Actions",
      " */",
      "export enum ActionTypes {",
      "\tTEMPLATE_ACTION = '@@${2:NameSpace}/${1:StoreName}/TEMPLATE_ACTION',",
      "}",
      "",
      "export const actions = {",
      "\ttemplateAction: (newTemplate: string) => createAction(ActionTypes.TEMPLATE_ACTION, {newTemplate}),",
      "};",
      "",
      "type ${1:StoreName}sActions = ActionsUnion<typeof actions>;",
      "",
      "/**",
      " * Reducer",
      " */",
      "export function reducer(state: I${1:StoreName}State = initialState, action: ${1:StoreName}sActions): I${1:StoreName}State {",
      "\tswitch (action.type) {",
      "\t\tcase ActionTypes.TEMPLATE_ACTION:",
      "\t\t\treturn {...state, template: action.payload.newTemplate};",
      "\t\tdefault:",
      "\t\t\treturn state;",
      "\t}",
      "}",
      "",
      "/**",
      " * Selectors",
      " */",
      "const templateSelector = (state: IApplicationState) => state.${3:PathToStore}.${1:StoreName}.template;",
      "",
      "export const selectors = {",
      "\ttemplate: templateSelector,",
      "};",
      "",
      "/**",
      " * Epics / Sagas / other async action handlers",
      " */"
    ],
    "description": "[Sandstorm] Create a new Redux store."
	}
}
